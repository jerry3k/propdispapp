// This file is generated by Nasir Scripts
var Page = 1;
var Rows = '';
var is_loading = true;
$( function() {
	//load_data();

	$( window ).on( 'load', function() {
		let d = new Date();
		let n = d.getMonth();
		$( '#select_month' ).val( n ).change();
	} );

	var start = moment().subtract( 29, 'days' );
	var end = moment().endOf( 'month' );
	$( '#reportrange span' ).html( '' );
	$( '#reportrange' ).daterangepicker( {
		opens: (Metronic.isRTL() ? 'left' : 'right'),
		startDate: start,
		endDate: end,
		minDate: '01/01/2016',
		maxDate: date( "m/t/Y" ),
		dateLimit: {
			days: 9999
		},
		showDropdowns: true,
		showWeekNumbers: true,
		timePicker: false,
		timePickerIncrement: 1,
		timePicker12Hour: true,
		applyClass: 'green',
		format: 'DD-MM-YYYY',
		separator: ' to ',
		locale: {
			applyLabel: 'Search',
			fromLabel: 'From',
			toLabel: 'To',
			customRangeLabel: 'Custom Range',
			daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
			monthNames: [
				'January',
				'February',
				'March',
				'April',
				'May',
				'June',
				'July',
				'August',
				'September',
				'October',
				'November',
				'December'
			],
			firstDay: 1
		},
		ranges: {
			'Today': [moment(), moment()],
			'Yesterday': [moment().subtract( 1, 'days' ), moment().subtract( 1, 'days' )],
			'Last 7 Days': [moment().subtract( 6, 'days' ), moment()],
			'Last 30 Days': [moment().subtract( 29, 'days' ), moment()],
			'This Month': [moment().startOf( 'month' ), moment().endOf( 'month' )],
			'Last Month': [
				moment().subtract( 1, 'month' ).startOf( 'month' ),
				moment().subtract( 1, 'month' ).endOf( 'month' )
			]
		},
	}, function( start, end ) {
		$( '#reportrange span' ).html( '' );
	} );
	$( '#reportrange' ).on( 'apply.daterangepicker', function( ev, picker ) {
		let fromtDate = picker.startDate;
		let toDate = picker.endDate;
		$( '#time_to' ).val( toDate );
		$( '#time_from' ).val( fromtDate );
		Page = 1;
		$( "#page" ).val( Page );
		load_data();
	} );

	window.addEventListener( "wheel", function( e ) {
		if ( Page >= Rows.pages ) {
			return false;
		}
		let windowHeight = $( window ).height();
		let windowScrooll = $( window ).scrollTop();
		let documentHeight = $( document ).height();
		if ( Page < Rows.pages && !is_loading && windowHeight + windowScrooll >= documentHeight - 400 ) { //if user scrolled to bottom of the page
			Page++;
			is_loading = true;
			$( '#page' ).val( Page );

			if ( Page > 1 ) {
				$( "#tbody" ).append( "<tr id='temp_row'><td class='center' colspan='45'><i class='fa fa-spin fa-spinner'></i> Loading ....</td></tr>" );
			}

			load_data();
		}
	} );
	// window scroll pagenation
	$( document ).on( 'scroll', function() {
		if ( Page >= Rows.pages ) {
			return false;
		}
		if ( Page < Rows.pages && !is_loading && $( window ).scrollTop() + $( window ).height() >= $( document ).height() - 400 ) { //if user scrolled to bottom of the page
			Page++;
			is_loading = true;
			$( '#page' ).val( Page );

			if ( Page > 1 ) {
				$( "#tbody" ).append( "<tr id='temp_row'><td class='center' colspan='5'><i class='fa fa-spin fa-spinner'></i> Loading ....</td></tr>" );
			}
			load_data();
		}
	} );

	// Reset search
	$( document ).on( 'click', '.reset_search', function( e ) {
		e.preventDefault();
		Page = 1;
		$( '#page' ).val( '1' );
		$( '#order' ).val( 'DESC' );
		$( '#filter_search' ).val( '' );
		$( '#time_to' ).val( '' );
		$( '#time_from' ).val( '' );
		$( '#job_status' ).val( 1 );
		$( '#tbody' ).unmark( markjs_options );
		load_data();
	} );

	$( document ).on( 'click', '.view', function( e ) {
		e.preventDefault();
		let date = $( this ).attr( 'data-date' );
		let jobid = $( this ).attr( 'data-jobid' );
		let invoice = $( this ).attr( 'data-invoice' );
		let client_id = $( this ).attr( 'data-client_id' );
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'invoice/view',
			method: 'post',
			data: { id: jobid },
			success: function( data ) {
				UnBlock();
				data.date = my_datetime_formate( date, 'M-Y' );
				data.invoice = invoice;
				data.client_id = client_id;
				$.fancybox.open( '<div id="print_div">' + tmpl( 'invoice_data', data ) + '</div>' );
			}
		} );
	} );

	$( document ).on( "click", "button.Screen", function( event ) {
		event.preventDefault();
		$( "#print_div" ).html( $( this ).parent().html() );
		$( "#print_div" ).removeClass( "hidden" ).print().addClass( "hidden" );
	} );

	$( document ).on( 'click', '.send', function( e ) {
		e.preventDefault();
		if ( !is_admin ) {
			return false;
		}
		let jobid = $( this ).attr( 'data-jobid' );
		let email = $( this ).attr( 'data-email' );
		let client_id = $( this ).attr( 'data-client_id' );
		let invoice = $( this ).attr( 'data-invoice_no' );

		$( "#form_sbt input[name='id']" ).val( jobid );
		$( "#form_sbt input[name='invoice']" ).val( invoice );
		$( "#form_sbt input[name='to']" ).val( email );
		$( "#form_sbt input[name='client_id']" ).val( client_id );
		$( "#form_sbt input[name='subject']" ).val( '' );
		$( "#form_sbt textarea[name='message']" ).val( '' );

		let month = $( '#select_month' ).find( ':selected' ).val();
		let year = $( '#select_month' ).find( ':selected' ).attr( 'data-year' );
		month = moment().month( month ).format( "MMMM" );
		let html = "Hi,\n\n" +
		           "Please find attached a copy of your invoice for " + month + " " + year + ".\n" +
		           "If you have any problems or queries regarding this invoice please contact Cathy directly in our accounts department on 0131 553 4224.\n" +
		           "We thank for your continued and valued custom and ask that you confirm receipt of this email.\n\n" +
		           "Regards." +
		           "\n\n" +
		           "Cathy Wishart\n" +
		           "Property Displayed Ltd\n" +
		           "wendy@propertydisplayed.co.uk\n" +
		           "0131 553 2978";

		$( "#form_sbt textarea[name='message']" ).val( html );
		$( '#invoice_modal' ).modal( 'show' );
	} );

	// form submit
	$( document ).on( 'submit', '#form_sbt', function( e ) {
		e.preventDefault();
		loading( 'form_sbt' );
		$( '#form_sbt' ).ajaxSubmit( {
			success: function( data ) {
				unloading( 'form_sbt' );
				let status = data.substring( 0, 2 );
				if ( status == 'OK' ) {
					$( '#invoice_modal' ).modal( 'hide' );
					let html = '<button class="btn btn-xs purple-studio tooltips" title="Email Send">\n' +
					           '                    <i class="fa fa-check"></i>\n' +
					           '                </button>';

					$( '.sendEmailStatus' ).html( html );
					Success( 'Email send successfully.' );
				} else {
					Error( data );
				}
			},
		} );
	} );

	$( document ).on( 'change', '#select_month', function( e ) {
		e.preventDefault();
		let month = this.value;
		let year = $( this ).find( ':selected' ).attr( 'data-year' );
		getMonthDateRange( year, month );
	} );

	$( document ).on( 'click', '.download_excel', function( e ) {
		e.preventDefault();
		$.fancybox.open( {
			src: DOMAIN_URL + 'invoice/download_excel',
			type: 'iframe', // Content type: image|inline|ajax|iframe|html (optional)
			opts: {
				afterShow: function( instance, current ) {
					// console.info( 'done!' );
				}
			}
		} );

		return false;

		let month = $( '#select_month' ).val();
		let year = $( '#select_month' ).find( ':selected' ).attr( 'data-year' );
		if ( empty( year ) ) {
			Error( 'Please select a month.' );
			return false;
		}
		var startDate = moment( [year, month] );
		var endDate = moment( startDate ).endOf( 'month' );
		let start = startDate.toDate();
		let end = endDate.toDate();
		start = moment( start ).format( 'LLL' );
		end = moment( end ).format( 'LLL' );
		$( '#time_to' ).val( end );
		$( '#time_from' ).val( start );
		Page = 1;
		$( "#page" ).val( Page );
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'invoice/load_data',
			method: 'post',
			data: $( '.form-filter' ).serialize(),
			success: function( data ) {
				UnBlock();
				if ( !empty( data.rows ) ) {
					window.location.href = DOMAIN_URL + 'invoice/download_excel/' + month + '/' + year;
				} else {
					Error( 'No record found this month.' );
				}
			}
		} );
	} );

	// search job invoice
	$( document ).on( 'keypress', '#filter_search', function( e ) {
		if ( e.which == 13 ) {
			Page = 1;
			$( '#page' ).val( '1' );
			$( '#order' ).val( 'DESC' );
			load_data();
		}
	} );

	$( document ).on( 'click', '.download', function( e ) {
		e.preventDefault();
		let id = $( this ).attr( 'data-id' );
		let jobid = $( this ).attr( 'data-jobid' );
		let client_id = $( this ).attr( 'data-client_id' );
		let invoice_no = $( this ).attr( 'data-invoice_no' );
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'invoice/download_invoice',
			method: 'post',
			data: {
				id: id,
				jobid: jobid,
				client_id: client_id,
				invoice_no: invoice_no,
			},
			success: function( data ) {
				UnBlock();
				if ( isset( data ) && data != 'error' ) {
					window.open( data, '_blank' );
				} else {
					Error( data );
				}
			}
		} );
	} );

	$( document ).on( 'click', '.generate_invoice', function( e ) {
		e.preventDefault();
		let id = $( this ).attr( 'data-id' );
		let ids = $( this ).attr( 'data-ids' );
		let jobid = $( this ).attr( 'data-jobid' );

		if ( empty( id ) ) {
			return false;
		}
		loading( 'row_id_' + id );
		$.ajax( {
			url: DOMAIN_URL + 'invoice/get_invoice_no',
			method: 'post',
			data: {
				id: id,
				ids: ids,
				status: 1,
				jobid: jobid,
			},
			success: function( data ) {
				unloading( 'row_id_' + id );
				$( '#td_invoice_' + id ).html( '#' + data );
				$( '.gen_' + id ).attr( 'disabled', false );
				$( '.gen_' + id ).attr( 'data-invoice_no', data );
			}
		} );

	} );

} );

function load_data() {
	if ( Page == 1 ) {
		Block();
	}
	$.ajax( {
		url: DOMAIN_URL + 'jobs/generate_monthly_report',
		method: 'post',
		data: $( '.form-filter' ).serialize(),
		success: function( data ) {
			UnBlock();
			//console.log( data );
			Rows = data;
			make_html();
			$( "#temp_row" ).remove();
		}
	} );
}

function make_html() {
	$( "#total_records" ).html( Rows.total_records );
	HTML = tmpl( 'load_data', Rows.rows );
	if ( Page > 1 ) {
		$( "#tbody" ).append( HTML );
	} else {
		$( "#tbody" ).html( HTML );
	}
	if ( !empty( $( '#filter_search' ).val() ) ) {
		$( '#tbody' ).mark( $( '#filter_search' ).val(), markjs_options );
	}
	UnBlock();
	is_loading = false;
}

function getMonthDateRange( year, month ) {
	// month in moment is 0 based, so 9 is actually october, subtract 1 to compensate
	// array is 'year', 'month', 'day', etc
	var startDate = moment( [year, month] );
	// Clone the value before .endOf()
	var endDate = moment( startDate ).endOf( 'month' );
	let start = startDate.toDate();
	let end = endDate.toDate();
	start = moment( start ).format( 'LLL' );
	end = moment( end ).format( 'LLL' );
	$( '#time_to' ).val( end );
	$( '#time_from' ).val( start );
	Page = 1;
	$( "#page" ).val( Page );
	load_data();
}