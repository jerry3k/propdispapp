// This file is generated by Nasir Scripts
var Page = 1;
var Rows = '';
var is_loading = true;
var placeSearch, autocomplete, map, marker, infoWindow, mylocation;
var componentForm = {
	street_number: 'short_name',
	route: 'long_name',
	locality: 'long_name',
	administrative_area_level_1: 'short_name',
	country: 'long_name',
	postal_code: 'short_name'
};

$( function() {
	load_data();
	load_jobtype();
	if ( is_admin ) {
		load_clients();
		load_clients( 'fitter' );
	}
	$( document ).on( 'click', '.add_job', function( e ) {
		e.preventDefault();
		$( '#map' ).html();
		$( '.price_field' ).hide();
		$( '.sticker_fields' ).html( '' );
		$( '#add_job' ).modal( 'show' );

		$( '#append_style' ).attr( 'style', '' );
		$( '#append_style' ).attr( 'style', 'height:400px;  overflow-y: auto;' );
		// jobtype id
		$( '#job_type' ).select2( 'destroy' );
		$( '#job_type' ).val( '' );
		// client id
		$( '#client_id' ).select2( 'destroy' );
		$( '#client_id' ).val( '' );
		// fitter id
		$( '#fitter_id' ).select2( 'destroy' );
		$( '#fitter_id' ).val( '' );
		// contact type
		$( "#form1 input[name=contact_type]" ).select2( 'destroy' );
		setTimeout( function() {
			$( '#job_type' ).select2();
			$( '#client_id' ).select2();
			$( '#fitter_id' ).select2();
			$( "#form1 input[name=contact_type]" ).select2();
		}, 1000 );

		// form1 submit when new user add job post
		$( "#form1 input[name=id]" ).val( '0' );
		$( "#form1 input[name=type]" ).attr( 'checked', false ).uniform();
		$( "#form1 input[name=job_status]" ).attr( 'checked', false ).uniform();
		$( "#form1 input[name=job_status][value='0']" ).attr( 'checked', true ).uniform();
		$( '#form1 #btn_reset' ).trigger( 'click' );

		// show add field
		$( '.dd_show' ).hide();
		$( "#form1 input[name=date_done]" ).val( '' );
		$( "#form1 input[name=job_status]" ).attr( 'checked', false ).uniform();
		$( "#form1 input[name=job_status][value='0']" ).attr( 'checked', true ).uniform();

	} );

	// submit form
	$( document ).on( 'submit', '#form1', function( e ) {
		e.preventDefault();
		loading( 'add_job' );
		$( '#form1' ).ajaxSubmit( {
			success: function( data ) {
				unloading( 'add_job' );
				if ( data.substr( 0, 2 ) == 'OK' ) {
					$( '#add_job' ).modal( 'hide' );
					let id = $( "#form1 input[name=id]" ).val();
					if ( empty( id ) ) {
						id = data.substr( 3 );
						if ( !empty( id ) ) {
							append_data( id );
						} else {
							load_data();
						}
						Success( 'Job saved successfully.' );
					} else {
						Success( 'Job updated successfully.' );
						load_rows( id );
					}
				} else {
					Error( data );
				}
			},
		} );
	} );

	$( document ).on( 'change', '#client_id , #job_type', function( e ) {
		e.preventDefault();
		if ( is_admin ) {
			$( '.price_field' ).show();
			let client_id = this.value;
			let type_id = $( "#job_type option:selected" ).val();
			if ( empty( type_id ) ) {
				Error( 'Please select a job type first.' );
				return false;
			}
			$( '.price_field label.price_label' ).html( 'Price <span class="required">*</span>' );
			// price_fiels
			$.ajax( {
				url: DOMAIN_URL + 'jobs2/get_jobtype_price',
				method: 'post',
				data: {
					client_id: client_id,
					type_id: type_id
				},
				success: function( data ) {
					UnBlock();
					$( '.price_field' ).show();
					$( '.price_field label.price_label' ).html( 'Price (Price system: ' + data.type + ') <span class="required">*</span>' );
					$( '.price_field input[name=price]' ).val( data.price );
					$( '.price_field input[name=expense]' ).val( data.expense );
				}
			} );
		}
	} );

	$( document ).on( 'click', '.edit', function( e ) {
		e.preventDefault();
		let id = $( this ).attr( 'data-id' );
		$( '#append_style' ).attr( 'style', 'height:400px;  overflow-y: auto;' );
		$( '.price_field' ).hide();
		$( '.sticker_fields' ).html( '' );
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/load_data',
			method: 'post',
			data: { id: id },
			success: function( d ) {
				UnBlock();
				if ( !empty( d.rows ) ) {
					let row = d.rows[ 0 ];
					$( '#add_job' ).modal( 'show' );
					$( '.sticker_fields' ).html( "<i class='fa fa-spin fa-spinner'></i> Loading ...." );
					load_sticker( row.id );

					if ( is_admin ) {

						$( '.price_field' ).show();
						$( '.price_field label.price_label' ).html( 'Price <span class="required">*</span>' );
						$( '.price_field input[name=price]' ).val( row.price );
						$( '.price_field input[name=expense]' ).val( row.expense );

						$( "#form1 input[name=client_contact]" ).val( row.client_contact );
						$( "#form1 input[name=board]" ).val( row.board );
						$( "#form1 input[name=problems]" ).val( row.problems );
						$( "#form1 input[name=appointment]" ).val( row.appointment );
						$( "#form1 input[name=job_status][value=" + row.job_status + "]" ).attr( 'checked', true );
						if ( !empty( row.charge ) ) {
							$( "#form1 input[name=charge]" ).attr( 'checked', true ).uniform();
						} else {
							$( "#form1 input[name=charge]" ).attr( 'checked', false ).uniform();
						}
						if ( !empty( row.pay ) ) {
							$( "#form1 input[name=pay]" ).attr( 'checked', true ).uniform();
						} else {
							$( "#form1 input[name=pay]" ).attr( 'checked', false ).uniform();
						}
						if ( !empty( row.job_cancelled ) ) {
							$( "#form1 input[name=job_cancelled]" ).attr( 'checked', true ).uniform();
						} else {
							$( "#form1 input[name=job_cancelled]" ).attr( 'checked', false ).uniform();
						}

						$( "#form1 input[name=job_status]" ).attr( 'checked', false ).uniform();
						if ( !empty( row.job_status ) ) {
							$( '.dd_show' ).show();
							$( "#form1 input[name=date_done]" ).val( mysql_date( row.date_done, 'd-m-Y' ) );
							$( "#form1 input[name=job_status][value='1']" ).attr( 'checked', true ).uniform();
						} else {
							$( '.dd_show' ).hide();
							$( "#form1 input[name=job_status][value='0']" ).attr( 'checked', true ).uniform();
						}

						// client id
						$( '#client_id' ).select2( 'destroy' );
						$( '#client_id' ).val( row.client_id );
						// fitter id
						$( '#fitter_id' ).select2( 'destroy' );
						$( '#fitter_id' ).val( row.fitter_id );
						// contact type
						$( "#form1 input[name=contact_type]" ).select2( 'destroy' );
						setTimeout( function() {
							$( '#client_id' ).select2();
							$( '#fitter_id' ).select2();
							$( "#form1 input[name=contact_type]" ).select2();
						}, 1000 );
					}
					// put field value
					$( "#form1 input[name=id]" ).val( row.id );
					$( "#form1 input[name=latitude]" ).val( row.latitude );
					$( "#form1 input[name=longitude]" ).val( row.longitude );
					$( "#form1 input[name=job_date]" ).val( row.job_date );
					$( "#form1 input[name=customer_name]" ).val( row.customer_name );
					$( "#form1 input[name=sticker]" ).val( row.sticker );
					$( "#form1 input[name=key]" ).val( row.key );
					$( "#form1 input[name=access]" ).val( row.access );
					$( "#form1 textarea[name=comments]" ).val( row.comments );
					$( '#job_type' ).select2( 'val', row.job_type );

					if ( is_admin ) {
						$( '.price_field' ).show();
						if ( empty( row.price ) ) {
							$( '#job_type' ).trigger( 'change' );
						} else {
							$( "#form1 input[name=price]" ).val( row.price );
						}
						$( "#form1 input[name=expense]" ).val( row.expense );
					}

					// Address field data
					$( '#autocomplete' ).val( row.address1 );
					if ( !empty( row.address1 ) ) {
						setTimeout( function() {
							codeAddress();
							$( '#autocomplete' ).focus();
							$( '#locality' ).val( row.city );
							$( '#postal_code' ).val( row.postcode );
							$( '#street_number' ).val( row.address2 );
							$( '#route' ).val( row.address3 );
							$( '#country option[value="' + row.country + '"]' ).attr( 'selected', 'selected' );
						}, 1000 );
					}
				} else {
					Error( d );
				}
			}
		} );
	} );

	// search shop data
	$( document ).on( 'keypress', '#filter_search', function( e ) {
		if ( e.which == 13 ) {
			Page = 1;
			$( '#page' ).val( '1' );
			$( '#order' ).val( 'DESC' );
			Block();
			$.ajax( {
				method: 'post',
				url: DOMAIN_URL + 'jobs2/load_data',
				data: $( '.form-filter' ).serialize(),
				success: function( data ) {
					UnBlock();
					Rows = data;
					make_html();
					$( "#temp_row" ).remove();
				}
			} );
		}
	} );

	// Delete shop data
	$( document ).on( 'click', '.delete', function( e ) {
		e.preventDefault();
		if ( !confirm( 'Are you sure you want to delete this job...?' ) ) {
			return false;
		}
		let id = $( this ).attr( 'data-id' );
		let client_id = $( this ).attr( 'data-client_id' );
		loading( 'row_id_' + id );
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/delete',
			method: 'post',
			data: {
				id: id,
				client_id: client_id
			},
			success: function( d ) {
				unloading( 'row_id_' + id );
				if ( d == 'OK' ) {
					$( '#row_id_' + id ).remove();
					load_data();
				} else {
					Error( d );
				}
			}
		} );
	} );

	// Reset search
	$( document ).on( 'click', '.reset_search', function( e ) {
		e.preventDefault();
		Page = 1;
		$( '#page' ).val( '1' );
		$( '#type' ).val( '' );
		$( '#order' ).val( 'DESC' );
		$( '#filter_search' ).val( '' );
		$( '#tbody' ).unmark( markjs_options );
		load_data();
	} );

	// trigger model
	$( document ).on( 'shown.bs.modal', '#add_job', function() {
		initial();
		google.maps.event.trigger( map, "resize" );
		map.setCenter( mylocation );
	} );

	$( document ).on( 'hide.bs.modal', '#add_job', function() {
		initial();
		google.maps.event.trigger( map, "resize" );
		map.setCenter( mylocation );
	} );

	// copy name
	$( document ).on( 'click', '.copy', function( e ) {
		e.preventDefault();
		let name = $( this ).attr( 'data-name' );
		let dt = new clipboard.DT();
		dt.setData( "text/plain", name );
		clipboard.write( dt );
		Success( 'Coppied " ' + name + ' "' );
	} );

	window.addEventListener( "wheel", function( e ) {
		if ( Page >= Rows.pages ) {
			return false;
		}
		let windowHeight = $( window ).height();
		let windowScrooll = $( window ).scrollTop();
		let documentHeight = $( document ).height();
		console.log( windowScrooll );
		if ( Page < Rows.pages && !is_loading && windowHeight + windowScrooll >= documentHeight - 400 ) { //if user scrolled to bottom of the page
			Page++;
			is_loading = true;
			$( '#page' ).val( Page );

			if ( Page > 1 ) {
				$( "#tbody" ).append( "<tr id='temp_row'><td class='center'><i class='fa fa-spin fa-spinner'></i> Loading ....</td></tr>" );
			}

			load_data();
		}
	} );

	// window scroll pagenation
	$( document ).on( 'scroll', function() {
		if ( Page >= Rows.pages ) {
			return false;
		}
		if ( Page < Rows.pages && !is_loading && $( window ).scrollTop() + $( window ).height() >= $( document ).height() - 400 ) { //if user scrolled to bottom of the page
			Page++;
			is_loading = true;
			$( '#page' ).val( Page );

			if ( Page > 1 ) {
				$( "#tbody" ).append( "<tr id='temp_row'><td class='center' colspan='8'><i class='fa fa-spin fa-spinner'></i> Loading ....</td></tr>" );
			}

			load_data();
		}
	} );

	$( document ).on( 'click', '.sticker_print', function( e ) {
		e.preventDefault();
		if ( !is_admin ) {
			return false;
		}
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/load_data',
			method: 'post',
			data: {
				job_status: 0,
				sticker: 1,
				pagesize: 999999999,
			},
			success: function( data ) {
				UnBlock();
				if ( count( data.rows ) <= 0 || empty( data.rows ) ) {
					Error( 'No record found on sticker.' );
					return false;
				}

				window.location.href = DOMAIN_URL + 'jobs2/download_sticker/0/1/';
			}
		} );
	} );

	$( document ).on( 'change', '#select_fitter', function( e ) {
		e.preventDefault();
		if ( empty( this.value ) ) {
			return false;
		}
		let id = this.value;
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/load_data',
			method: 'post',
			data: {
				fitter_id: id,
				job_status: 0,
			},
			success: function( data ) {
				UnBlock();
				let cnt = count( data.rows );
				if ( empty( cnt ) ) {
					Error( 'No record found of this fitter.' );
					return false;
				}
				window.location.href = DOMAIN_URL + 'jobs2/download_fitter/' + id;
			}
		} );
	} );

	$( document ).on( 'click', '.job_status', function( e ) {
		e.preventDefault();
		Page = 1;
		$( '#page' ).val( Page );
		$( '#order' ).val( 'DESC' );
		$( '#filter_search' ).val( '' );
		$( '#tbody' ).unmark( markjs_options );
		let status = $( this ).attr( 'data-status' );
		let form = $( '.form-filter' ).serialize() + '&job_status=' + status;
		Block();
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/load_data',
			method: 'post',
			data: form,
			success: function( data ) {
				UnBlock();
				Rows = data;
				make_html();
				$( "#temp_row" ).remove();
			}
		} );
	} );

	$( document ).on( 'click', '.jobDataDone', function( e ) {
		e.preventDefault();
		let val = this.value;
		$( '.dd_show' ).hide();
		if ( isset( val ) && val == 1 ) {
			$( '.dd_show' ).show();
		}
	} );

	$( document ).on( 'click', '.jobStatusChange', function() {
		//e.preventDefault();
		let id = $( this ).attr( 'data-id' );
		let date_done = null;
		let job_status = 0;
		let statusText = 'Pending';
		let statusColor = 'red';
		if ( this.checked == true ) {
			job_status = 1;
			statusColor = 'green';
			statusText = 'Completed';
			date_done = mysql_date();
		}
		loading( 'row_id_' + id );
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/jobStatusUpdate',
			method: 'post',
			data: {
				id: id,
				date_done: date_done,
				job_status: job_status
			},
			success: function( data ) {
				unloading( 'row_id_' + id );
				if ( isset( data ) && data == 'OK' ) {
					Success( data );
					load_rows( id );
					$( '.statusText' + id ).html( statusText );
					$( '.statusText' + id ).css( 'color', statusColor );
				} else {
					Error( data );
				}
			}
		} );
	} );

	// ******************************************
	// ******************************************
	// ******************************************
	// ***************** Jobs 2 *****************
	// ******************************************
	// ******************************************
	// ******************************************

	$( document ).on( 'click', '.add_sticker', function( e ) {
		e.preventDefault();
		let html = '<div class="row">' +
		           '<div class="col-md-5">\n' +
		           '<input class="form-control" required="required" name="sticker[]" value="" placeholder="Name">\n' +
		           '</div>\n' +
		           '<div class="col-md-5">\n' +
		           '<input class="form-control" name="position[]" value="" placeholder="Position">\n' +
		           '</div>' +
		           '<div class="col-md-2">\n' +
		           '<a class="red rsticker"><i class="fa fa-times"></i></a>\n' +
		           '</div>' +
		           '</div>\n';
		$( '.sticker_fields' ).append( html );
	} );

	$( document ).on( 'click', '.rsticker', function( e ) {
		e.preventDefault();
		$( this ).parent().parent().remove();
	} );

	$( document ).on( 'click', '.dsticker', function( e ) {
		e.preventDefault();
		if ( !confirm( 'Are you sure you want to delete this sticker?' ) ) {
			return false;
		}
		let id = $( this ).attr( 'data-id' );
		loading( 'row_' + id );
		$.ajax( {
			method: 'post',
			url: DOMAIN_URL + 'jobs2/del_sticker_row',
			data: { id: id },
			success: function( data ) {
				unloading( 'row_' + id );
				if ( data == 'OK' ) {
					$( '#row_' + id ).remove();
				}
			}
		} );
	} );

	$( document ).on( 'click', '.change_sticker_status', function() {
		let v = 0;
		let id = $( this ).attr( 'data-id' );
		if ( this.checked == true ) {
			v = 1;
		}

		loading( 'row_' + id );
		$.ajax( {
			method: 'post',
			url: DOMAIN_URL + 'jobs2/sticker_status',
			data: { id: id, status: v },
			success: function( data ) {
				unloading( 'row_' + id );
			}
		} );

	} );

} );

function load_sticker( id ) {
	$.ajax( {
		method: 'post',
		url: DOMAIN_URL + 'jobs2/load_sticker',
		data: { id: id },
		success: function( data ) {
			if ( data != 'empty' ) {
				$( '.sticker_fields' ).html( tmpl( 'sticker_row', data ) );
			} else {
				$( '.sticker_fields' ).html( '' );
			}
			//$( '.sticker_fields' ).html( "<i class='fa fa-spin fa-spinner'></i> Loading ...." );
		}
	} );
}

function load_row_sticker( id ) {
	$.ajax( {
		method: 'post',
		url: DOMAIN_URL + 'jobs2/load_sticker',
		data: { id: id },
		success: function( data ) {
			let html = '';
			$( data ).each( function( k, v ) {
				html += '<div class="st_row">';
				html += '<b>Name : </b> ' + v.sticker + '<br>';
				html += '<b>Position : </b> ' + v.position + '<br>';
				html += '</div>';
			} );

			$( '.job_sticker_' + id ).html( html );
		}
	} );
}

function load_data() {
	if ( Page == 1 ) {
		Block();
	}
	$.ajax( {
		url: DOMAIN_URL + 'jobs2/load_data',
		method: 'post',
		data: $( '.form-filter' ).serialize(),
		success: function( data ) {
			UnBlock();
			Rows = data;
			make_html();
			$( "#temp_row" ).remove();
		}
	} );
}

function make_html() {
	$( "#total_records" ).html( Rows.total_records );
	HTML = tmpl( 'load_data', Rows.rows );
	if ( Page > 1 ) {
		$( "#tbody" ).append( HTML );
	} else {
		$( "#tbody" ).html( HTML );
	}
	is_loading = false;
	if ( !empty( $( '#filter_search' ).val() ) ) {
		$( '#tbody' ).mark( $( '#filter_search' ).val(), markjs_options );
	}
	// get fitter client list
	let fitter_ids = [];
	let fitterIds = [];
	$( Rows.rows ).each( function( k, v ) {
		fitter_ids.push( v.fitter_id );
	} );
	$.each( fitter_ids, function( i, el ) {
		if ( $.inArray( el, fitterIds ) === -1 ) {
			fitterIds.push( el );
		}
	} );
	if ( !empty( fitterIds ) ) {
		let option = '<option value="">==Print Fitter==</option>';
		$.each( fitterIds, function( key, id ) {
			option += '<option value="' + id + '">' + ucwords( get_username( id ) ) + '</option>';
		} );
		$( '#select_fitter' ).html( option );
	}

	UnBlock();
}

function load_rows( id = '' ) {
	if ( empty( id ) ) {
		return false;
	}
	$( '#row_id_' + id ).LoadingOverlay( 'show' );
	$.ajax( {
		url: DOMAIN_URL + 'jobs2/load_data',
		method: 'post',
		data: { id: id },
		success: function( data ) {
			$( '#row_id_' + id ).LoadingOverlay( 'hide' );
			$( '#row_id_' + id ).html( tmpl( 'load_row', data.rows ) );
		}
	} );
}

function append_data( id = '' ) {
	if ( empty( id ) ) {
		return false;
	}
	Block();
	$.ajax( {
		url: DOMAIN_URL + 'jobs2/load_data',
		method: 'post',
		data: { id: id },
		success: function( data ) {
			UnBlock();
			$( '#tbody' ).prepend( '<tr id="row_id_' + id + '">' + tmpl( 'load_row', data.rows ) + '</tr>' );
		}
	} );
}

function load_clients( type = 'client' ) {
	$.ajax( {
		url: DOMAIN_URL + 'staff/load_data',
		method: 'post',
		data: {
			orderby: 'username',
			order: 'ASC',
			type: type,
			is_active: 1,
			pagesize: 999999,
		},
		success: function( data ) {
			if ( type == 'client' ) {
				$( '#client_id' ).select2( 'destroy' );
				if ( !empty( data.rows ) ) {
					let option = '<option value="">== Select Client ==</option>';
					$.each( data.rows, function( i, v ) {
						option += '<option value="' + v.id + '">' + ucfirst( v.username ) + '</option>';
					} );
					$( '#client_id' ).html( option );
					$( '#client_id' ).select2();
				}
			} else if ( type == 'fitter' ) {
				$( '#fitter_id' ).select2( 'destroy' );
				if ( !empty( data.rows ) ) {
					let option = '<option value="">== Select Fitter ==</option>';
					$.each( data.rows, function( i, v ) {
						option += '<option value="' + v.id + '">' + ucfirst( v.username ) + '</option>';
					} );
					$( '#fitter_id' ).html( option );
					$( '#fitter_id' ).select2();
				}
			}
		}
	} );
}

function load_jobtype() {
	$.ajax( {
		url: DOMAIN_URL + 'jobtype/load_data',
		method: 'post',
		data: {
			status: '1',
			order: 'ASC',
			orderby: 'name',
			pagesize: 999999,
		},
		success: function( data ) {
			$( '#job_type' ).select2( 'destroy' );
			if ( !empty( data.rows ) ) {
				let option = '<option value="">== Select Jobtype ==</option>';
				$.each( data.rows, function( i, v ) {
					option += '<option value="' + v.id + '">' + (i + 1) + ') ' + ucfirst( v.name ) + '</option>';
				} );
				$( '#job_type' ).html( option );
				$( '#job_type' ).select2();
			}
		}
	} );
}

// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

function initial( lat = 55.953252, lng = -3.188266999999996 ) {
	$( '#latitude' ).val( lat );
	$( '#longitude' ).val( lng );
	mylocation = new google.maps.LatLng( lat, lng );
	map = new google.maps.Map( document.getElementById( 'map' ), {
		zoom: 13,
		mapTypeId: google.maps.MapTypeId.ROADMAP,
		center: { lat: lat, lng: lng },
	} );
	marker = new google.maps.Marker( {
		position: mylocation,
		map: map,
		draggable: true
	} );
	google.maps.event.addListener(
		marker,
		'drag',
		function() {
			let latlng = marker.position.lat() + ',' + marker.position.lng();
			$.ajax( {
				url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + latlng + '&key=AIzaSyALtf8vQux4gEiDEeoG0nkZROKYOsvSwmk',
				success: function( data ) {
					//console.log( data );

					// let street_number = data.results[ 0 ].address_components[ 0 ].long_name;
					// let route = data.results[ 0 ].address_components[ 1 ].long_name;
					// let city = data.results[ 0 ].address_components[ 2 ].long_name;
					// let country = data.results[ 0 ].address_components[ 5 ].long_name;
					// let postcode = data.results[ 0 ].address_components[ 7 ].long_name;
					// let latitude = marker.position.lat();
					// let longitude = marker.position.lng();
					// // value assign
					// $( '#latitude' ).val( latitude );
					// $( '#longitude' ).val( longitude );
					// $( '#route' ).val( route );
					// $( '#locality' ).val( city );
					// $( '#postal_code' ).val( postcode );
					// $( '#street_number' ).val( street_number );
					// $( '#country option[value="' + country + '"]' ).attr( 'selected', 'selected' );

					let k = 2;
					let len = data.results[ 0 ].address_components.length;
					if ( isset( len ) && len < 7 ) {
						k = 1;
					} else if ( isset( len ) && len > 7 ) {
						k = 3;
					}

					$( '#autocomplete' ).val( data.results[ 0 ].formatted_address );
					$( '#locality' ).val( data.results[ 0 ].address_components[ k ].short_name );
					for ( var i = 0; i < data.results[ 0 ].address_components.length; i++ ) {
						var addressType = data.results[ 0 ].address_components[ i ].types[ 0 ];
						if ( componentForm[ addressType ] ) {
							var val = data.results[ 0 ].address_components[ i ][ componentForm[ addressType ] ];
							document.getElementById( addressType ).value = val;
						}
					}

				}
			} );
		}
	);
}

//start of modal google map
function codeAddress() {
	var geocoder = new google.maps.Geocoder();
	var address = document.getElementById( 'autocomplete' ).value;
	geocoder.geocode( { 'address': address }, function( results, status ) {
		if ( status == 'OK' ) {

			let location = results[ 0 ].geometry.location;
			let loc = location.toString();
			loc = explode( ',', loc );
			let lat = trim( str_replace( '(', '', loc[ 0 ] ) );
			let lng = trim( str_replace( ')', '', loc[ 1 ] ) );
			$( '#latitude' ).val( lat );
			$( '#longitude' ).val( lng );
			map.setCenter( results[ 0 ].geometry.location );
			var marker = new google.maps.Marker( {
				map: map,
				draggable: true,
				position: results[ 0 ].geometry.location
			} );
			google.maps.event.addListener(
				marker,
				'drag',
				function() {
					let latlng = marker.position.lat() + ',' + marker.position.lng();
					$.ajax( {
						url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + latlng + '&key=AIzaSyALtf8vQux4gEiDEeoG0nkZROKYOsvSwmk',
						success: function( data ) {
							//console.log( 'B => ' + data );
							// let street_number = data.results[ 0 ].address_components[ 0 ].long_name;
							// let route = data.results[ 0 ].address_components[ 1 ].long_name;
							// let city = data.results[ 0 ].address_components[ 2 ].long_name;
							// let country = data.results[ 0 ].address_components[ 5 ].long_name;
							// let postcode = data.results[ 0 ].address_components[ 7 ].long_name;
							// let latitude = marker.position.lat();
							// let longitude = marker.position.lng();
							// // value assign
							// $( '#latitude' ).val( latitude );
							// $( '#longitude' ).val( longitude );
							// $( '#route' ).val( route );
							// $( '#locality' ).val( city );
							// $( '#postal_code' ).val( postcode );
							// $( '#street_number' ).val( street_number );
							// $( '#country option[value="' + country + '"]' ).attr( 'selected', 'selected' );

							let k = 2;
							let len = data.results[ 0 ].address_components.length;
							if ( isset( len ) && len < 7 ) {
								k = 1;
							} else if ( isset( len ) && len > 7 ) {
								k = 3;
							}

							$( '#autocomplete' ).val( data.results[ 0 ].formatted_address );
							$( '#locality' ).val( data.results[ 0 ].address_components[ k ].short_name );
							for ( var i = 0; i < data.results[ 0 ].address_components.length; i++ ) {
								var addressType = data.results[ 0 ].address_components[ i ].types[ 0 ];
								if ( componentForm[ addressType ] ) {
									var val = data.results[ 0 ].address_components[ i ][ componentForm[ addressType ] ];
									document.getElementById( addressType ).value = val;
								}
							}

						}
					} );
				}
			);
		} else {
			Error( 'Geocode was not successful for the following reason: ' + status );
		}
	} );
}

function initAutocomplete() {
	// Create the autocomplete object, restricting the search to geographical
	// location types.
	autocomplete = new google.maps.places.Autocomplete(
		/** @type {!HTMLInputElement} */
		(document.getElementById( 'autocomplete' )),
		{ types: [ 'geocode' ] } );

	// When the user selects an address from the dropdown, populate the address
	// fields in the form.
	autocomplete.addListener( 'place_changed', fillInAddress );

	if ( !is_admin ) {
		let lat = -3.188266999999996;
		let lng = 55.953252;
		$.ajax( {
			url: DOMAIN_URL + 'jobs2/client_locations',
			method: 'post',
			success: function( locations ) {
				var map = new google.maps.Map( document.getElementById( 'map2' ), {
					zoom: 11,
					center: new google.maps.LatLng( lng, lat ),
					mapTypeId: google.maps.MapTypeId.ROADMAP
				} );
				var infowindow = new google.maps.InfoWindow();
				var marker, i;
				for ( i = 0; i < locations.length; i++ ) {
					marker = new google.maps.Marker( {
						position: new google.maps.LatLng( locations[ i ][ 1 ], locations[ i ][ 2 ] ),
						map: map,
						icon: locations[ i ][ 4 ]
					} );
					google.maps.event.addListener( marker, 'click', (function( marker, i ) {
						return function() {
							infowindow.setContent( locations[ i ][ 0 ] );
							infowindow.open( map, marker );
						}
					})( marker, i ) );
				}
			}
		} );
	}

}

function fillInAddress() {
	// Get the place details from the autocomplete object.
	// var place = autocomplete.getPlace();
	// for ( var component in componentForm ) {
	// 	document.getElementById( component ).value = '';
	// 	document.getElementById( component ).disabled = false;
	// }
	// // Get each component of the address from the place details
	// // and fill the corresponding field on the form.
	// for ( var i = 0; i < place.address_components.length; i++ ) {
	// 	var addressType = place.address_components[ i ].types[ 0 ];
	// 	if ( componentForm[ addressType ] ) {
	// 		var val = place.address_components[ i ][ componentForm[ addressType ] ];
	// 		document.getElementById( addressType ).value = val;
	// 	}
	// }

	loading( 'add_job' )
	var place = autocomplete.getPlace();
	var geocoder = new google.maps.Geocoder();
	geocoder.geocode( { 'address': place.formatted_address }, function( results, status ) {
		if ( status == 'OK' ) {
			let location = results[ 0 ].geometry.location;
			let loc = location.toString();
			loc = explode( ',', loc );
			let lat = trim( str_replace( '(', '', loc[ 0 ] ) );
			let lng = trim( str_replace( ')', '', loc[ 1 ] ) );
			let latlng = lat + ',' + lng;
			$.ajax( {
				url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + latlng + '&key=AIzaSyALtf8vQux4gEiDEeoG0nkZROKYOsvSwmk',
				success: function( data ) {

					unloading( 'add_job' );
					// console.log( 'C => ' + data );

					// let street_number = data.results[ 0 ].address_components[ 0 ].long_name;
					// let route = data.results[ 0 ].address_components[ 1 ].long_name;
					// let city = data.results[ 0 ].address_components[ 2 ].long_name;
					// let country = data.results[ 0 ].address_components[ 5 ].long_name;
					// let postcode = data.results[ 0 ].address_components[ 7 ].long_name;
					// // value assign
					// $( '#latitude' ).val( lat );
					// $( '#longitude' ).val( lng );
					// $( '#route' ).val( route );
					// $( '#locality' ).val( city );
					// $( '#postal_code' ).val( postcode );
					// $( '#street_number' ).val( street_number );
					// $( '#country option[value="' + country + '"]' ).attr( 'selected', 'selected' );

					let k = 2;
					let len = data.results[ 0 ].address_components.length;
					if ( isset( len ) && len < 7 ) {
						k = 1;
					} else if ( isset( len ) && len > 7 ) {
						k = 3;
					}

					$( '#autocomplete' ).val( data.results[ 0 ].formatted_address );
					$( '#locality' ).val( data.results[ 0 ].address_components[ k ].short_name );
					for ( var i = 0; i < data.results[ 0 ].address_components.length; i++ ) {
						var addressType = data.results[ 0 ].address_components[ i ].types[ 0 ];
						if ( componentForm[ addressType ] ) {
							var val = data.results[ 0 ].address_components[ i ][ componentForm[ addressType ] ];
							document.getElementById( addressType ).value = val;
						}
					}

				}
			} );
		} else {
			Error( 'Geocode was not successful for the following reason: ' + status );
		}
	} );

	codeAddress();
}

// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
	if ( navigator.geolocation ) {
		navigator.geolocation.getCurrentPosition( function( position ) {
			var geolocation = {
				lat: position.coords.latitude,
				lng: position.coords.longitude
			};
			var circle = new google.maps.Circle( {
				center: geolocation,
				radius: position.coords.accuracy
			} );
			autocomplete.setBounds( circle.getBounds() );
		} );
	}
}
